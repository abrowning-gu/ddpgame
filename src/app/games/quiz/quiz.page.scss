:host{
    --box-width:320px;
    --box-height:320px;
    --header-height:100px;
  }
   ion-content{
    // --background: rgb(255,252,229)  ;
    
   }
   ion-item{
    --border-style: none;
   }
  ion-button{
    //--background:rgba(210,181,159,0.3);
    --background:rgba(87,116,131,0.9);
    --color:rgb(255,255,255);
   /* --border-color: #6815ec;*/
    
  }
  ion-radio{
    --border-radius:12px 6px 15px 7px;
    --inner-border-radius:6px 6px 8px 10px;
    --color:rgb(154,72,82);
    --color-checked: rgb(227,171,169);
  }
  ion-radio::part(container) {
    width: 30px;
    height: 30px;
    border-color: #000000;
    border:3px solid;
    background:rgb(154,72,82);
  }
  .gamebuttons ion-button{
    --background:rgb(210,181,159);
    --border-color:rgb(0,0,0);
    --border-width:4px;
    --border-radius:12px;
    --border-style:solid;
    --color:rgb(0,0,0);
  }
  .dots{
    float:right;
    width:60px;
    height:auto;
    margin-right:2em;
    cursor:grabbing;
  
  }
  .layouttop img{
    width:auto;
    max-height:var(--header-height);
  }
  .layoutbottom{
   align-self:end;
   justify-self: end;;
   
  }
  .layoutbottom img{
    
    transform:rotate(180deg);
   float:right;
  
    width:auto;
    max-height:var(--header-height);
  }
  ion-button.close {
    // width: 60px;
    // height: 30px;
    --border-radius:12px 6px 15px 7px;
    --border-color: #000000;
    --border-width:3px;
    --border-style:solid;
    --background:rgb(154,72,82);
    --background-hover:rgb(210,181,159);
  
    --box-shadow: 0 2px 6px 0 rgb(0, 0, 0, 0.25);
 
    --color:#000000;
   
  }

  #gamespace{
    display:grid;
    grid-template-rows:1fr 3fr 1fr;
    width: 100vw;
    height: 100vh;
    border:12px solid black;
    border-radius:1em;
  }
  .controls{
    display:grid;
    grid-template-columns: 70px 1fr 70px;
  }
  .gamebuttons{
    display:flex;
    flex-direction:colums;
    justify-content: center;
  }
  .prev ,.next{
    align-self:center;
    
  }
  
  .tp-wrapper {
    position:relative;
    top:-3rem;
     
       margin-bottom:2em;   
       display:flex;
       justify-content: center;
       align-items: center;   
       
    }
    
    .tp-box {
      width: var(--box-width);
      height: var(--box-height);
     
    }

  
  @keyframes firework {
    0% { transform: translate(var(--x), var(--initialY)); width: var(--initialSize); opacity: 10; }
    50% { width: 0.5vmin; opacity: 10; }
    100% { width: var(--finalSize); opacity: 0; }
  }
  
 
  .firework,
  .firework::before,
  .firework::after
  {
    --initialSize: 0.5vmin;
    --finalSize: 45vmin;
    --particleSize: 0.2vmin;
    
    --color1: rgb(154,74,83);
    --color2: rgb(235, 54, 48);
    --color3: white;
    --color4: rgb(87,116,131);
    --color5: rgb(110,78,91);
    --color6: rgb(11, 140, 69);
    --y: -30vmin;
    --x: -50%;
    --initialY: 60vmin;
    content: "";
    animation: firework 2s infinite;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, var(--y));
    width: var(--initialSize);
    aspect-ratio: 1;
    background: 
      
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 0% 0%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 100% 0%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 100% 100%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 0% 100%,
     
      
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 50% 0%,
      radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 100% 50%,
      radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 50% 100%,
      radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 0% 50%,
      
      /* bottom right */
      radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 80% 90%,
      radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 95% 90%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 90% 70%,
      radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 100% 60%,
      radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 55% 80%,
      radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 70% 77%,
      
      /* bottom left */
      radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 22% 90%,
      radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 45% 90%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 33% 70%,
      radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 10% 60%,
      radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 31% 80%,
      radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 28% 77%,
      radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 13% 72%,
      
      /* top left */
      radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 80% 10%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 95% 14%,
      radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 90% 23%,
      radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 100% 43%,
      radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 85% 27%,
      radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 77% 37%,
      radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 60% 7%,
      
      /* top right */
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 22% 14%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 45% 20%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 33% 34%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 10% 29%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 31% 37%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 28% 7%,
      radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 13% 42%
      ;
    background-size: var(--initialSize) var(--initialSize);
    background-repeat: no-repeat;
  }
  
  .firework::before {
    --x: -50%;
    --y: -50%;
    --initialY: -50%;
  /*   transform: translate(-20vmin, -2vmin) rotate(40deg) scale(1.3) rotateY(40deg); */
    transform: translate(-50%, -50%) rotate(40deg) scale(1.3) rotateY(40deg);
  /*   animation: fireworkPseudo 2s infinite; */
  }
  
  .firework::after {
    --x: -50%;
    --y: -50%;
    --initialY: -50%;
  /*   transform: translate(44vmin, -50%) rotate(170deg) scale(1.15) rotateY(-30deg); */
    transform: translate(-50%, -50%) rotate(170deg) scale(1.15) rotateY(-30deg);
  /*   animation: fireworkPseudo 2s infinite; */
  }
  
  .firework:nth-child(2) {
    --x: 30vmin;
  }
  
  .firework:nth-child(2),
  .firework:nth-child(2)::before,
  .firework:nth-child(2)::after {
    --color1: pink;
    --color2: violet;
    --color3: red;
    --color4: orchid;
    --color5: plum;
    --color6: lavender;  
    --finalSize: 40vmin;
    left: 30%;
    top: 60%;
    animation-delay: -0.25s;
  }
  .firework:nth-child(3),
  .firework:nth-child(3)::before,
  .firework:nth-child(3)::after {
   
    left: 70%;
    top: 40%;
    animation-delay: -0.75s;
  }
  


.notification{
      
      background-color:rgb(210,181,159);
      border:5px solid black;
      border-radius:12px;
      padding:1.5em;
      text-align: center;
      font-size:2.2em;
    }

    @media only screen and (min-width:200px){

      .tp-wrapper {
        flex-direction:column;
      }
      .tp-box{
        width:calc(var(--box-width) * 0.7);
        height:calc(var(--box-height) * 0.7);
      }
      .layouttop img{
       
        max-height:calc(var(--header-height)*0.7);
      }
      .layoutbottom img{
       
        max-height:calc(var(--header-height)*0.7);
      }
    }

   @media only screen and (min-width:600px){
    .tp-wrapper {
      flex-direction:row;
    }
    .tp-box{
      width:calc(var(--box-width) * 1);
      height:calc(var(--box-height) * 1);
    }
    .layouttop img{
       
      max-height:calc(var(--header-height)*1);
    }
    .layoutbottom img{
     
      max-height:calc(var(--header-height)*1);
    }
   } 
   @media only screen and (min-width:900px){
   
    .layouttop img,.layoutbottom img{
      max-height:calc(var(--header-height)*1.1);
    }
    
    .tp-box{
      width:calc(var(--box-width) * 1.3);
      height:calc(var(--box-height) *1.3);
    }
   } 
   @media only screen and (min-width:1440px){
    .tp-box{
      width:calc(var(--box-width) * 1.5);
      height:calc(var(--box-height) *1.5);
    }
   

   } 

